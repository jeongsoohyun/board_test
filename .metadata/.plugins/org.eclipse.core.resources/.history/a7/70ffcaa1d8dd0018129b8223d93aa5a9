<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

    <!-- 객체를 따로 생성하지 않고 base-package 로 시작하는 모든 패키지를 스캔하여 자동으로 객체 생성 -->
	<context:component-scan base-package="com.raizcorp"/>

	<!-- DataSource 설정 -->
	<!-- JdbcTemplate 클래스가 JDBC API를 이용해 DB 연동을 처리하기 위해선 반드시 DB로부터 커넥션을 얻어야함
		따라서 JdbcTemplate 객체가 사용할 DataSource를 bean 으로 등록해서 스프링 컨테이너가 생성하도록 처리 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	      <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
	      <property name="url" value="jdbc:mysql://localhost:3306/boardtest"></property>
	      <property name="username" value="root"></property>
	      <property name="password" value="1234"></property>
	</bean>
	
	<!-- 위의 dataSource 처럼 xml 내에 value 값을 전부 넣을수도 있지만 properties 파일을 따로 둘수도 있음
	<context:property-placeholder location="classpath:config/database.properties"/>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	      <property name="driverClassName" value="${jdbc.driver}"></property>
	      <property name="url" value="${jdbc.url}"></property>
	      <property name="username" value="${jdbc.username}"></property>
	      <property name="password" value="${jdbc.password}"></property>
	</bean>
	-->
	
	<!-- Spring JDBC 설정 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!--<bean id="log" class="com.springbook.biz.common.LogAdvice"/>
	
	<aop:config>
	    <aop:pointcut id="allPointcut" expression="execution(* com.raizcorp..*Impl.*(..))"/>
	    
	    <aop:aspect ref="log">
	        <aop:before pointcut-ref="allPointcut" method="printLog"/>
	    </aop:aspect>
	</aop:config> -->
</beans>
